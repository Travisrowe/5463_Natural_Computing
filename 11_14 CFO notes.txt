Central Force Optimization (CFO)
	Gravity Heuristic - not an exact simulation of physics
		F = m * a
		in our case, mass is equal to fitness of an object. Objects with higher mass are harder to move
		
		s = s + V[0]t + (1/2) * a * t^2
		except V[0]t is a pain in our case so
		s = s + (1/2) * a * t^2	
		
		Each step of calculating (acceleration and fitness for each node) takes O(N^2) time. N * (N - 1)
		
		CFO is deterministic because it does not use RNG. We can predict what's going to happen.
		
	Himmelblau's function
	
	In our program, T is actually delta time.
		double T = .05;
		
Algorithm
{
	t = 0
	DELTA_T = //some constant
	//Initialize the probes' position vectors at time 0, x[1](0), ..., x[N](0), to a uniform or similar distribution over the search space
	for each (probe i to N) do
	{
		set initial velocity v[i](0) = 0;
		set initial acceleration a[i](0) = 0;
		compute initial fitness M[i](0) = f(x[i](0));
	}
	while(t < MAX_TIME && !finished)
	{
		for each (probe i to N) do
		{
			//Compute new probe position
			x[i] = x[i] + (1/2)a[i]*DELTA_T^2;
			if(newPos is out of bounds)
				relocate x[i]
			Update fitness
			v[i] = newPos - oldPos
			compute new acceleration
		}
	}
		
}